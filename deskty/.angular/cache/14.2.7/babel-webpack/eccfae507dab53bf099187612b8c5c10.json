{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { concatWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-electron\";\nimport * as i3 from \"src/app/services/ipc.service\";\nimport * as i4 from \"@angular/fire/compat/firestore\";\nimport * as i5 from \"@angular/fire/compat/storage\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction LoginComponent_sup_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"sup\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.profilePromt, \" \");\n  }\n}\n\nfunction LoginComponent_sup_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"sup\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.passwordPrompt, \" \");\n  }\n}\n\nfunction LoginComponent_sup_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"sup\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.logNotify, \" \");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, electronService, ipcService, cdRef, afs, afsU) {\n      this.router = router;\n      this.electronService = electronService;\n      this.ipcService = ipcService;\n      this.cdRef = cdRef;\n      this.afs = afs;\n      this.afsU = afsU;\n      this.invalidPassword = false;\n      this.invalidId = false;\n      this.logPrompt = false;\n      this.nudgeRequest = false;\n      this.ssRequest = false;\n    }\n\n    ngOnInit() {\n      this.profileCollection = this.afs.collection('profiles');\n      this.profiles = this.profileCollection.valueChanges();\n      this.profiles.subscribe(data => (this.profileList = data, console.log(this.profileList)));\n      setInterval(() => {\n        // Listen to Window Events\n        this.ipcService.send('check', 'checking');\n        this.getProfile(); // Gets Window Events\n\n        this.ipcService.on('appLogs', (event, arg) => {\n          this.appLogs = arg; // Add Logs\n\n          this.logDate = new Date();\n          this.afs.collection('profileLogs').add({\n            eventDetails: this.appLogs.windowClass + ' / ' + this.appLogs.windowName + ' is currently active',\n            isIncognito: 'Windows PC',\n            logDate: this.logDate,\n            profileName: this.loggedProfileId,\n            userName: this.loggedUsername\n          });\n          this.cdRef.detectChanges();\n        });\n      }, 60000);\n      setInterval(() => {\n        this.getProfile();\n        this.checkNudge();\n        this.checkSS();\n      }, 5000);\n    }\n\n    login() {\n      if (!this.profileId) {\n        this.invalidId = true;\n        this.profilePromt = 'Profile Id is required';\n      } else {\n        this.invalidId = false;\n        this.profilePromt = '';\n      }\n\n      if (!this.username) {\n        this.invalidPassword = true;\n        this.passwordPrompt = 'Username is required';\n      } else {\n        this.invalidPassword = false;\n        this.passwordPrompt = '';\n      }\n\n      for (let i = 0; i < this.profileList.length; i++) {\n        console.log(this.username);\n        console.log(this.profileId);\n\n        if (this.profileId == this.profileList[i].profileId && this.username == this.profileList[i].username) {\n          this.logNotify = 'We are now scouting this machine';\n          this.logPrompt = true;\n          localStorage.setItem('logProfile', this.profileId);\n          localStorage.setItem('logUser', this.username);\n          this.checkConnect();\n          setTimeout(() => {\n            this.logNotify = '';\n            this.logPrompt = false;\n            this.username = '';\n            this.profileId = '';\n          }, 5000);\n          return;\n        } else {\n          this.logNotify = 'Invalid Credentials';\n          this.logPrompt = true;\n        }\n      }\n    } // Setup communication between the App and Windows Shells\n\n\n    checkConnect() {\n      this.ipcService.send('message', 'ping');\n      this.ipcService.on('reply', (event, arg) => {\n        this.pong = arg;\n\n        if (this.pong == true) {\n          this.connectCheck = 'This device is now being scouted';\n        }\n\n        this.cdRef.detectChanges();\n      });\n    } // Get firestore Data\n\n\n    getProfile() {\n      this.loggedProfileId = localStorage.getItem('logProfile');\n      this.loggedUsername = localStorage.getItem('logUser');\n      console.log(this.loggedProfileId, this.loggedUsername);\n      this.logprofileCollection = this.afs.collection('profiles', ref => ref.where('profileId', '==', this.loggedProfileId).where('username', '==', this.loggedUsername));\n      this.logprofiles = this.logprofileCollection.valueChanges();\n      this.logprofiles.subscribe(data => (this.logprofileList = data, console.log(this.logprofileList), this.nudgeRequest = this.logprofileList[0].nudge, this.ssRequest = this.logprofileList[0].ssrequest));\n    }\n\n    checkNudge() {\n      if (this.nudgeRequest == true) {\n        // Nudge\n        this.ipcService.send('watch', 'looking');\n      }\n    }\n\n    checkSS() {\n      if (this.ssRequest == true) {\n        this.getScreenshot();\n        this.imagePathName = 'gallery' + Math.random();\n        this.imageRef = this.afsU.ref(this.imagePathName);\n        this.imageBaseRef = this.afsU.upload(this.imagePathName, this.ssUrl);\n        this.imageSub = this.imageBaseRef.snapshotChanges().pipe(concatWith(this.imageRef.getDownloadURL())).subscribe(url => {\n          this.downloadUrl = url;\n          this.galleryUrl = this.downloadUrl;\n          this.afs.collection('gallery').add({\n            ssUrl: this.galleryUrl,\n            profileId: this.loggedProfileId,\n            userName: this.loggedUsername\n          });\n        });\n      }\n    }\n\n    getScreenshot() {\n      // Screenshot\n      this.ipcService.send('screenshot', 'sendSS');\n      this.ipcService.on('capture', (event, arg) => {\n        this.ssUrl = arg;\n        console.log(this.ssUrl);\n        this.cdRef.detectChanges();\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ElectronService), i0.ɵɵdirectiveInject(i3.IpcService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.AngularFirestore), i0.ɵɵdirectiveInject(i5.AngularFireStorage));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 32,\n    vars: 6,\n    consts: [[1, \"main\"], [1, \"headerContainer\"], [\"src\", \"https://firebasestorage.googleapis.com/v0/b/prodscout-90022.appspot.com/o/ps128.png?alt=media&token=dbeed48f-3063-4c7c-8e7f-94d35fcf4a3f\"], [1, \"bodyContainer\"], [\"type\", \"text\", 1, \"input-form-standard\", 3, \"ngModel\", \"ngModelChange\"], [\"style\", \"font-size: 10px; color: red\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"button-lg\", 3, \"click\"], [1, \"footerContainer\"], [2, \"font-size\", \"10px\", \"color\", \"red\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Deskty!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"prodScout Watcher for Desktop\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementStart(9, \"h5\");\n        i0.ɵɵtext(10, \"Log-In (Managed Profiles)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\");\n        i0.ɵɵtext(12, \"Profile Id \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.profileId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵtemplate(16, LoginComponent_sup_16_Template, 2, 1, \"sup\", 5);\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"label\");\n        i0.ɵɵtext(19, \"Username \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵtemplate(23, LoginComponent_sup_23_Template, 2, 1, \"sup\", 5);\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵelementStart(25, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_25_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(26, \" Send Scouts \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵtemplate(28, LoginComponent_sup_28_Template, 2, 1, \"sup\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 7)(30, \"label\");\n        i0.ɵɵtext(31, \"prodScout 2022 (Deskty)\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.connectCheck, \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.profileId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.invalidId);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.invalidPassword);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.logPrompt);\n      }\n    },\n    dependencies: [i6.NgIf, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel],\n    styles: [\".main[_ngcontent-%COMP%]   .headerContainer[_ngcontent-%COMP%]{margin-top:50px;text-align:center}.main[_ngcontent-%COMP%]   .bodyContainer[_ngcontent-%COMP%]{font-size:20px;margin-top:50px;text-align:center}.main[_ngcontent-%COMP%]   .bodyContainer[_ngcontent-%COMP%]   .input-form-standard[_ngcontent-%COMP%]{font-size:24px;width:180px;border:solid 1px #5da7db;border-radius:4px;text-align:center}.main[_ngcontent-%COMP%]   .bodyContainer[_ngcontent-%COMP%]   .button-lg[_ngcontent-%COMP%]{border:solid 1px #5da7db;border-radius:15px;background:#5da7db;font-size:16px;margin:5px;padding:5px;color:#fff}.main[_ngcontent-%COMP%]   .footerContainer[_ngcontent-%COMP%]{text-align:center;margin-top:10px;font-size:12px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}